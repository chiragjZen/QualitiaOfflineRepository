##########  This file contains TestObject specific properties information ##########
##########  These properties and their description have been taken from Sauce online documentation and to know more about Sauce Labs properties visit https://wiki.saucelabs.com/display/DOCS/Appium+Capabilities+for+Real+Device+Testing ##########
##########  For the sake of simplicity and internal use of Qualiita the capabilities are prefixed with to.  ##########

#Property Name:to.url
#Appium Endpoint
#US RDC: https://us1.appium.testobject.com/wd/hub
#EU RDC: https://eu1.appium.testobject.com/wd/hub
#e.g. to.url=https://eu1.appium.testobject.com/wd/hub

to.url=

#Property Name:to.testobject_api_key
#The project you want to test
#e.g. to.testobject_api_key=1234567890123456789012345678901234567890

to.testobject_api_key=

############################################################################### Upload App Section Starts ###############################################################################

#Property Name:to.uploadURI
#URI to be used to upload an app. If not given default is used i.e. https://app.testobject.com:443/api/storage/upload
#e.g. to.uploadURI=https://app.testobject.com:443/api/storage/upload

#to.uploadURI=https://app.testobject.com:443/api/storage/upload

#Property Name:to.username
#Sauce Labs user name. It is used to form Sauce Labs URL and using REST API.
#e.g. to.username=sauceusername

#to.userName=

#Property Name: to.appUploadType
#This property decides whether to upload and install an app per test case(UPLOAD_PER_TEST_CASE) basis whenever Mobile.OpenApp is executed or per suite(UPLOAD_PER_SUITE) basis.
#Defalut and recommended is UPLOAD_PER_SUITE.
#e.g. to.appUploadType=UPLOAD_PER_SUITE

#to.appUploadType=

#Property Name: to.appDisplayName
#Perfecto repository path where app is to be uploaded
#e.g. to.appDisplayName=myCustomApp.ipa

#to.appDisplayName=

#Property Name:to.maxAttemptsToUploadAppFile
# Maximum number of retries when application upload fails in the first attempt. Default value 2 is taken in case of negative or invalid values.
# It is mandatory to set valid userName, testobject_api_key when you want to upload app file to TestObject.
# To use previously uploaded .apk/.ipa from TestObject, set 0.
#e.g. to.maxAttemptsToUploadAppFile=5

#to.maxAttemptsToUploadAppFile=

############################################################################### Upload App Section Ends ###############################################################################

#Property Name: to.platformName
#The mobile operating system platform you want to use in your test.
#e.g. to.platformName=iOS

to.platformName=

#Property Name: to.platformVersion
#The mobile operating system version that you want to use in your test.
#e.g. to.platformVersion=9.1
#to.platformVersion=

#Property Name: to.deviceName
#Set the capability deviceName to dynamically allocate a device using its device name (aka Display Name), such as "iPhone 6", "LG G6", "Samsung Galaxy S7". This option gives you access to a large selection of available devices that share the same device name to use in your testing
#device name will be the same as the as appear in TestObject device selection menu. For example the deviceName for the available iPhone 5 device would be "iPhone 5 Free" and for the Samsung Galaxy S7 running Android 7 will be "Samsung Galaxy S7".
#e.g. to.deviceName=LG_G2_real

to.deviceName=

#Property Name: to.testobject_app_id
#ID of the app that you can use to populate
#e.g. to.testobject_app_id=1

to.testobject_app_id=

#Property Name: to.testobject_session_creation_timeout
#A string containing the desired timeout in milliseconds. The maximum allowed timeout is 30 minutes.
#e.g. to.testobject_session_creation_timeout=10

#to.testobject_session_creation_timeout=

#Property Name: to.privateDevicesOnly
#User with access to both private and public devices can request allocation of private devices only. Set the capability privateDevicesOnly to true to ensure dynamic allocation will only allocate a device from the private pool to your test.
#e.g. to.privateDevicesOnly=false

#to.privateDevicesOnly=

#Property Name: to.appiumVersion
#The version of the Appium driver you want to use. If not specified the test will run against the default Appium version.
#It's better to specify the latest Appium version, which is the one suggested by the  Platforms Configurator (https://wiki.saucelabs.com/display/DOCS/Platform+Configurator#/) , unless you have a reason for testing against some other version.
#e.g. to.appiumVersion=1.6.0

#to.appiumVersion=

#Property Name: to.tabletOnly
#You can use the tabletOnly desired capability to to focus device allocation to tablet (applies to both iOS and Android).
#e.g. to.tabletOnly=false

#to.tabletOnly=

#Property Name: to.phoneOnly
#You can use the phoneOnly desired capability to to focus device allocation to phone (applies to both iOS and Android).
#e.g. to.phoneOnly=false

#to.phoneOnly=

#Property Name: to.automationName
#Set the following capabilities to use UIAutomator2 with Appium (Android native apps only)
#e.g. to.automationName=Appium

#to.automationName=

#Property Name: to.testobject_cache_device
#You can use the capability testobject_cache_device to leave the device allocated to you for a short time after each Appium session. If you immediately start another test on the device, you won't need to wait for the allocation and device cleaning process to be repeated.
#e.g. to.testobject_cache_device=true

#to.testobject_cache_device=


#Property Name: to.commandTimeouts
#Custom timeout in milliseconds for the WDA backend. The maximum allowed timeout is 60,000 seconds.
#e.g. to.commandTimeouts=600

#to.commandTimeouts=

#Property Name: to.tunnelIdentifier
#If an identified tunnel is started using Sauce Connect, your jobs can choose to proxy through it using this set of keys with the right identifier.
#e.g. to.tunnelIdentifier=MyTunnel01

#to.tunnelIdentifier=

#Property Name: to.parentTunnel
#This desired capability will let the test job use any shared tunnels available from the specified parent account. i.e. any account that is upstream in the hierarchy. If using a shared tunnel, you must specify both tunnelIdentifier and parentTunnel.
#e.g. to.parentTunnel=<username of parent>

#to.parentTunnel=