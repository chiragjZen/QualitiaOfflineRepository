##########  This file contains Perfecto Mobile specific properties information ##########
##########  These properties and their description have been taken from Perfecto's online documentation and to know more about Sauce Labs properties visit http://developers.perfectomobile.com/display/PD/Defining+capabilities ##########
##########  The properties start with "pm." are the Qualitia provided properties not Perfecto. ##########

#Property Name:pm.url
#The Perfecto URL.
#e.g. pm.url=http://myLab.perfectomobile.com/nexperience/perfectomobile/wd/hub

pm.url=<<Perfecto URL>>

#Property Name:pm.securityToken
#User's personal security token (recommended to use as authentication).
#e.g. pm.securityToken=eyJhbGciOiJSUzI1NiJ9.eyJqdGkiOiI1NTg2MjBmZi1lMTAyLTRlNDAt...QIalYCHkgEQQU0IB_6CO6fQ

pm.securityToken=<<Perfecto Security Token>>

############################################################################### Upload App Section Starts ###############################################################################

#Property Name:pm.user
#Perfecto user name. It is used to access your Perfecto instance.
#Mandatory when you want to upload app to Perfecto's repository.
#e.g. pm.user=perfectouser

#pm.user=<<Perfecto User>>

#Property Name:pm.password
#Password for the user name mentioned above.
#Mandatory when you want to upload app to Perfecto's repository.
#e.g. pm.password=perfectouser

#pm.password=<<Perfecto User Password>>

#Property Name:pm.host
#The URL where your Perfecto Lab's instance is hosted.
#Mandatory when you want to upload app to Perfecto's repository.
#e.g. pm.host=myLab.perfectomobile.com

#pm.host=<<Perfecto host>>

#Property Name: pm.appUploadAndInstallType
#This property decides whether to upload and install an app per test case(UPLOAD_PER_TEST_CASE) basis whenever Mobile.OpenApp is executed or per suite(UPLOAD_PER_SUITE) basis.
#Defalut and recommended is UPLOAD_PER_SUITE.
#e.g. pm.appUploadAndInstallType=UPLOAD_PER_SUITE

#pm.appUploadAndInstallType=

#Property Name: pm.appStoragePath
#Perfecto repository directory path where app is to be uploaded. (For example: PRIVATE:applications/, PRIVATE:applications/Test Applications, and so forth)
#e.g. pm.appStoragePath=PRIVATE:applications/Test Applications

#pm.appStoragePath=

#Property Name:pm.maxAttemptsToUploadAppFile
# Maximum number of retries when application upload fails in the first attempt. Default value 2 is taken in case of negative or invalid values.
# It is mandatory to set valid user, password, and pm.host when you want to upload app file to Perfecto's repository. Only securityToken will not allow uploading app.
# To use previously uploaded .apk/.ipa from Perfecto's repository, set 0.
#e.g. pm.maxAttemptsToUploadAppFile=5

#pm.maxAttemptsToUploadAppFile=

############################################################################### Upload App Section Ends ###############################################################################

#Property Name:pm.deviceName
#The name of the device you want to use from Perfecto lab. Select desired device, click the Capabilities button and then select the currently selected device option to view device name.
# If you want to use other capabilities like platformVersion, platformName, manufacturer, and so on, keep the deviceName capability empty and uncommented (remove the '#' sign prior to capability name).

#e.g. pm.deviceName=345304573489573498

#pm.deviceName=

#Property Name:pm.platformName
#The operating system of the device you want to use from Perfecto lab. Select desired device and click the Capabilities button to view platformName.
#e.g. pm.platformName=Android

#pm.platformName=

#Property Name:pm.platformVersion
#The OS version of the device you want to use from Perfecto lab. Select desired device and click the Capabilities button to view platformVersion.
#e.g. pm.platformVersion=9.3.1

#pm.platformVersion=

#Property Name:pm.manufacturer
#The manufacturer of the device you want to use from Perfecto lab. Select desired device and click the Capabilities button to view device manufacturer.
#e.g. pm.manufacturer=Samsung

#pm.manufacturer=

#Property Name:pm.model
#The model of the device you want to use from Perfecto lab. Select desired device and click the Capabilities button to view device model.
#e.g. pm.model=Galaxy S III

#pm.model=

#Property Name:pm.automationName
#The automation engine to use. It determines the UIElement class names identified by the automation engine. See note below.
#Use XCUITest if automating iOS 10 or later native applications, see more details - http://developers.perfectomobile.com/display/TT/Migrating+iOS+test+scripts+to+XCUITest-based+automation+infrastructure.
#Note: Use PerfectoMobile for the Perfecto object tree. It uses generic UIElement classes.
#Default is Appium. other possible value is XCUITest.
#e.g. pm.automationName=XCUITest

#pm.automationName=

#Property Name:pm.autoInstrument
#To work with hybrid applications, install the iOS/Android application as instrumented.
#When set to 'true' the iOS/Android application is instrumented before it is installed. Default is false.
#e.g. pm.autoInstrument=true

#pm.autoInstrument=

#Property Name:pm.openDeviceTimeout
#The timeout (in minutes) to wait for a selected device in case it is not available when triggering the execution (use with caution).
#Max: 15 minutes
#e.g. pm.openDeviceTimeout=5

pm.openDeviceTimeout=5

#Property Name:pm.description
#The device description.
#e.g. pm.description=some description

#pm.description=

#Property Name:pm.location
#The location of the device you want to use from Perfecto lab. Select desired device and click the Capabilities button to view device location.
#e.g. pm.location=NA-US-BOS

#pm.location=

#Property Name:pm.network
#The device network.
#e.g. pm.network=AT&T

#pm.network=

#Property Name:pm.resolution
#The resolution of screen of the device you want to use from Perfecto lab. Select desired device and click the Capabilities button to view device resolution.
#e.g. pm.resolution=1920x1080

#pm.resolution=

#Property Name:pm.screenshotFormat
#The image format you want to save screenshots to. For example: .jpg (default), .png, .bmp
#e.g. pm.screenshotFormat=.png

#pm.screenshotFormat=

#Property Name:pm.automationInfrastructure
#The device automation infrastructure of the mobile. For example: XCUITest, UIAutomation (for iOS), UIAutomator1, UIAutomator2 (for Android)
#e.g. pm.automationInfrastructure=XCUITest

#pm.automationInfrastructure=

#Property Name:pm.browserName
#The browser name which you want to use for test case execution. For example: chrome, mobileChrome, safari, mobileSafari, mobileOS, mobileDefault
#e.g. pm.browserName=chrome

#pm.browserName=

#Property Name:pm.version
#The version of the browser you want to use for test case execution.
#e.g. pm.version=53

#pm.version=

#Property Name:pm.platform
#The mobile platform you want to use to execute test case on.
#e.g. pm.platform=Any

#pm.platform=

#Property Name:pm.takesScreenshot
#System takes screenshots of the application at different points during execution and attaches them to the execution report. Default is false.
#e.g. pm.takesScreenshot=true

#pm.takesScreenshot=

#Property Name:pm.screenshotOnError
#System takes screenshot of the application at point where an error status is reported. Screenshot is attached to the execution report. Default is true.
#e.g. pm.screenshotOnError=false

#pm.screenshotOnError=

#Property Name:pm.outputReport
#Set true if you want to generate report in Perfecto after test case execution. Default is false.
#e.g. pm.outputReport=false

#pm.outputReport=

#Property Name:pm.outputVideo
#Set true if you want to record video of the test case execution. Default is false.
#e.g. pm.outputVideo=false

#pm.outputVideo=

#Property Name:pm.outputVisibility
#The report access user permissions. private, group, public
#e.g. pm.outputVisibility=private

#pm.outputVisibility=

#Property Name:pm.autoLaunch
#Set true to have Appium install and launch the application automatically. Default is true.
#e.g. pm.autoLaunch=false

#pm.autoLaunch=

#Property Name:pm.orientation
#The orientation of the device when executing test case. Values can be LANDSCAPE or PORTRAIT.
#e.g. pm.orientation=LANDSCAPE

#pm.orientation=

#Property Name:pm.noReset
#Set true if you want to reset the application under test before staring this session. Default is false.
#e.g. pm.noReset=true

#pm.noReset=

#Property Name:pm.fullReset
#Set true to reset the state of the application by uninstalling it. This will also remove the application after the session is complete. Default is false.
#e.g. pm.fullReset=true

#pm.fullReset=


#Property Name:pm.sensorInstrument
#To work with sensor input (for example fingerprint simulation or image injection) install the iOS/Android application as instrumented.
#When set to 'true' the iOS/Android application is instrumented before it is installed. Default is false.
#e.g. pm.sensorInstrument=true

#pm.sensorInstrument=

#Property Name:pm.dataReset
#When re-installing an application all data associated with the application will be deleted and application will start with a clean slate.
#If set to false - data will not be deleted and the updated application will continue in context of the existing data. Default is true.
#e.g. pm.dataReset=false

#pm.dataReset=

#Property Name:pm.baseAppiumBehavior
#This capability selects whether to use the basic behavior of Appium in cases that Perfecto offers alternative behavior (may be expanded in the future with different behaviors):
#YES – An element is considered visible if that element's frame is inside the screen frame and also the element is hittable.
#NO - Default behavior (Perfecto) – An element is considered visible if that element's frame is inside the screen frame.
#e.g. pm.baseAppiumBehavior=YES

#pm.baseAppiumBehavior=

#Property Name:pm.appWaitActivity
#Activity name for the Android activity you want to wait for.

#pm.appWaitActivity=

#Property Name:pm.appWaitPackage
#Java package of the Android application you want to wait for.

#pm.appWaitPackage=

#Property Name:pm.intentAction
#Intent action which will be used to start activity. Default is android.intent.action.MAIN

#pm.intentAction=

#Property Name:pm.intentCategory
#Intent category which will be used to start activity. Default is android.intent.category.LAUNCHER

#pm.intentCategory=

#Property Name:pm.intentFlags
#Flags that will be used to start activity. Default is 0x10200000.

#pm.intentFlags=

#Property Name:pm.optionalIntentArguments
#Additional intent arguments that will be used to start activity. See Intent arguments at https://developer.android.com/reference/android/content/Intent.html

#pm.optionalIntentArguments=

#Property Name:pm.processArguments
#Arguments to pass to the AUT using instruments.

#pm.processArguments=

#Property Name:pm.language
#Sets the iOS device language for the duration of the test script.

#pm.language=

#Property Name:pm.locale
#Sets the iOS device region settings for the duration of the test script.

#pm.locale=

#Property Name:pm.tunnelId
#Identifies the connection tunnel created by the perfectoconnect client, used to connect to the local network.
#e.g. pm.tunnelId=0a334599-210a-4d42-aa8e-445071a4070b

#pm.tunnelId=